{"version":3,"sources":["components/Header/Header.js","components/VideoResult/VideoResult.js","components/VideoResultContainer/VideoResultContainer.js","components/StatBox/StatBox.js","components/StatBoxContainer/StatBoxContainer.js","components/DateInput/DateInput.js","js/sortResults.js","components/RegionSelection/RegionSelection.js","components/InputHeader/InputHeader.js","js/youtubeapi.js","components/BarChart/BarChart.js","App.js","index.js"],"names":["Header","props","className","alt","VideoResult","id","videoId","target","href","rel","src","thumbnailURL","altText","title","channelId","channelTitle","parseInt","views","toLocaleString","VideoResultContainer","videoList","map","vidElement","datetimePublished","StatBox","value","label","StatBoxContainer","statBoxList","statBox","idx","DateInput","useState","startDate","setStartDate","endDate","setEndDate","placeholderText","selected","onChange","date","maxDate","Date","showYearDropdown","showMonthDropdown","dropdownMode","todayButton","autoComplete","popperPlacement","minDate","sortResults","results","totalViews","unsortedVidList","allTimesPublished","i","String","padStart","vid","snippet","statistics","viewCount","thumbnails","high","url","publishedAt","timePublished","match","videoData","push","sortedVidList","sort","a","b","length","contentRegions","require","RegionSelection","state","currentRegion","regionList","regionCode","htmlFor","name","this","region","Component","mockData","InputHeader","runSearch","bind","runSearchWithMockData","fireOnEnter","testEnv","isSearching","keyword","document","getElementById","setState","publishedAfter","searchParams","q","Promise","reject","Error","publishedBefore","toISOString","axios","get","params","process","then","res","data","items","vidIdList","vidId","join","result","youtubeSearch","viewResults","onSearch","catch","err","alert","setTimeout","addEventListener","event","keyCode","preventDefault","click","btn","onClick","type","placeholder","defaultValue","START_TIME","getTime","setGraphData","graphDataProps","xLabels","Array","keys","hour","uploadTimeData","labels","datasets","backgroundColor","borderColor","hoverBackgroundColor","borderWidth","barPercentage","categoryPercentage","convertTimes12HourClock","suffix","BarChart","graphData","uploadData","options","responsive","maintainAspectRatio","tooltips","callbacks","context","console","log","getHours","nextHour","vid_grammar","display","text","fontSize","fontColor","legend","position","scales","xAxes","offset","time","unit","gridLines","offsetGridLines","ticks","autoSkip","scaleLabel","labelString","yAxes","stepSize","nextProps","prevState","Loader","App","simplifyLargeNumber","getSearchResults","setLoader","averageViews","videoResults","hasSearched","useDateRange","num","count","Math","round","resultsContainer","statContainer","content","active","ReactDOM","render","StrictMode"],"mappings":"imMAceA,MAZf,SAAgBC,GAEZ,OACI,wBAAQC,UAAU,SAAlB,SACI,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,OAAOC,IAAI,iCAC1B,+DCcDC,MApBf,SAAqBH,GACpB,OACC,oBAAIC,UAAU,qBAAd,SACC,sBAAKA,UAAU,yBAAf,UACC,qBAAKA,UAAU,uBAAf,SACC,mBAAGG,GAAIJ,EAAMK,QAASJ,UAAU,aAAaK,OAAO,SAASC,KAAI,0CAAqCP,EAAMK,SAAWG,IAAI,aAA3H,SACC,qBAAKP,UAAU,kBAAkBQ,IAAKT,EAAMU,aAAcR,IAAKF,EAAMW,cAGvE,sBAAKV,UAAU,uBAAf,UACC,oBAAIA,UAAU,cAAd,SAA6BD,EAAMY,QACnC,qBAAKX,UAAU,sBAAf,SACC,+BAAI,mBAAGM,KAAI,0CAAqCP,EAAMa,WAAaP,OAAO,SAASE,IAAI,aAAnF,SAAiGR,EAAMc,eAAiB,uCAAiBC,SAASf,EAAMgB,OAAOC,iBAAnK,uBCGSC,MAdf,SAA8BlB,GAC1B,OACI,qBAAKC,UAAU,oBAAoBG,GAAG,oBAAtC,SACI,oBAAIH,UAAU,eAAd,SACKD,EAAMmB,UAAUC,KAAI,SAAUC,GAE3B,OAAO,cAAC,EAAD,CAAiCT,MAAOS,EAAW,GAAIL,MAAOK,EAAW,GAAIX,aAAcW,EAAW,GACzGV,QAASU,EAAW,GAAIC,kBAAmBD,EAAW,GAAIhB,QAASgB,EAAW,GAAIP,aAAcO,EAAW,GAAIR,UAAWQ,EAAW,IADhHA,EAAW,YCGzCE,MAVf,SAAiBvB,GAEb,OACI,sBAAKC,UAAU,WAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BD,EAAMwB,QAClC,oBAAIvB,UAAU,aAAd,SAA4BD,EAAMyB,YCM/BC,MAVf,SAA0B1B,GACtB,OACI,qBAAKC,UAAU,qBAAf,SACKD,EAAM2B,YAAYP,KAAI,SAAUQ,EAASC,GACtC,OAAO,cAAC,EAAD,CAASL,MAAOI,EAAQJ,MAAOC,MAAOG,EAAQH,OAAYI,S,gCCsClEC,MAzCf,SAAmB9B,GACf,MAAkC+B,mBAAS,MAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEA,OACI,sBAAKlC,UAAU,6BAAf,UACI,qBAAKA,UAAU,yBAAf,yBACA,sBAAKA,UAAU,yBAAf,UACI,cAAC,IAAD,CACIG,GAAG,kBACHgC,gBAAgB,oBAChBC,SAAUL,EACVM,SAAU,SAAAC,GAAI,OAAIN,EAAaM,IAC/BC,QAAUN,GAAqB,IAAIO,KACnCC,kBAAgB,EAChBC,mBAAiB,EACjBC,aAAa,SACbC,YAAY,QACZC,aAAa,MACbC,gBAAgB,WAEpB,cAAC,IAAD,CACI3C,GAAG,mBACHgC,gBAAgB,kBAChBC,SAAUH,EACVI,SAAU,SAAAC,GAAI,OAAIJ,EAAWI,IAC7BC,QAAS,IAAIC,KACbO,QAAShB,EACTU,kBAAgB,EAChBC,mBAAiB,EACjBC,aAAa,SACbC,YAAY,QACZC,aAAa,MACbC,gBAAgB,kB,8BCErBE,MAvCf,SAAqBC,GAKjB,IAJA,IAAIC,EAAa,EACbC,EAAkB,GAClBC,EAAoB,GAEfC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,EAAkBE,OAAOD,GAAGE,SAAS,EAAG,MAAQ,EAN1B,oBASVN,GATU,IAS1B,2BAAyB,CAAC,IAAjBO,EAAgB,QACfpD,EAAUoD,EAAIrD,GACdQ,EAAQ6C,EAAIC,QAAQ9C,MAEpBE,EAAe2C,EAAIC,QAAQ5C,aAC3BD,EAAY4C,EAAIC,QAAQ7C,UAExBG,EAAQyC,EAAIE,WAAWC,UAC7BT,GAAcpC,SAASC,GAEvB,IAAMN,EAAe+C,EAAIC,QAAQG,WAAWC,KAAKC,IAC3CpD,EAAO,sCAAkCC,EAAlC,KAEPU,EAAoBmC,EAAIC,QAAQM,YAChCC,EAAgB3C,EAAkB4C,MAAM,WAE9Cb,EAAkBY,EAAc,IAAMZ,EAAkBY,EAAc,IAAM,EAE5E,IAAIE,EAAY,CAACvD,EAAOI,EAAON,EAAcC,EAASW,EAAmBjB,EAASS,EAAcD,GAChGuC,EAAgBgB,KAAKD,IA5BC,8BA+B1B,IAAIE,EAAgBjB,EAAgBkB,MAAK,SAAUC,EAAGC,GAClD,OAAOA,EAAE,GAAKD,EAAE,MAIpB,MAAO,CAACpB,EADWA,EAAakB,EAAcI,OACZJ,EAAehB,ICnC/CqB,EAAiBC,EAAQ,KA2BhBC,E,kDAxBX,WAAY5E,GAAQ,IAAD,8BACf,cAAMA,IACD6E,MAAQ,CACTC,cAAe,gBACfC,WAAYL,EACZM,WAAY,MALD,E,0CASnB,WAAU,IAAD,OACL,OACI,sBAAK/E,UAAU,6BAAf,UACI,uBAAOA,UAAU,yBAAyBgF,QAAQ,gBAAlD,qBACA,wBAAQhF,UAAU,yBAAyBiF,KAAK,UAAU9E,GAAG,gBAA7D,SACK+E,KAAKN,MAAME,WAAW3D,KAAI,SAACgE,GACxB,OAAQ,EAAKP,MAAMC,gBAAmBM,EAAOF,KAAQ,wBAAQ1D,MAAO4D,EAAOhF,GAAoBiC,UAAQ,EAAlD,SAAoD+C,EAAOF,MAA5BE,EAAOhF,IACtC,wBAAQoB,MAAO4D,EAAOhF,GAAtB,SAA2CgF,EAAOF,MAAnBE,EAAOhF,gB,GAjBrFiF,aCExBC,EAAWX,EAAQ,KAiFVY,E,kDA9EX,WAAYvF,GAAQ,IAAD,8BACf,cAAMA,IACDwF,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,sBAAwB,EAAKA,sBAAsBD,KAA3B,gBAC7B,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKZ,MAAQ,CACTe,SAAS,EACTN,SAAUA,GAPC,E,6CAWnB,WAAa,IAAD,OACRH,KAAKnF,MAAM6F,cACX,IAAMC,EAAUC,SAASC,eAAe,kBAAkBxE,MAC1D2D,KAAKc,SAAS,CAAEH,QAASA,IACzB,IAAId,EAAae,SAASC,eAAe,iBAAiBxE,MACpD0E,EAAiBH,SAASC,eAAe,mBAAmBxE,MAUlE,OChCR,SAAuB2E,GAUnB,IAAIL,EAAUK,EAAaC,EAC3B,GAAgB,KAAZN,EACA,OAAOO,QAAQC,OAAO,IAAIC,MAAM,4CAGpC,IAAIC,EAAoD,KAAjCL,EAAaK,gBAA0B,IAAI/D,KAAK0D,EAAaK,iBAAiBC,eAAgB,IAAIhE,MAAOgE,cAC5HP,EAAkD,KAAhCC,EAAaD,eAAyB,IAAIzD,KAAK0D,EAAaD,gBAAgBO,cAAgB,uBAElH,OAAOC,IAAMC,IAAN,mDAA8D,CACjEC,OAAQ,CACJ,KAAQ,UACR,WAAc,GACd,IAAOC,0CACP,EAAKf,EACL,KAAQ,QACR,WAAcK,EAAanB,WAC3B,eAAkBkB,EAClB,gBAAmBM,KAGtBM,MAAK,SAAAC,GAGF,IAFA,IAAI5F,EAAY4F,EAAIC,KAAKC,MACrBC,EAAY,GACP5D,EAAI,EAAGA,EAAInC,EAAUsD,OAAQnB,IAAK,CACvC,IAAI6D,EAAQhG,EAAUmC,GAAGlD,GAAGC,QAC5B6G,EAAU9C,KAAK+C,GAEnB,OAAOT,IAAMC,IAAN,mDAA8D,CACjEC,OAAQ,CACJ,KAAQ,oCACR,GAAMM,EAAUE,OAChB,IAAOP,6CAGVC,MAAK,SAACO,GACH,OAAOA,EAAOL,KAAKC,YDbxBK,CAPY,CACf,EAAKxB,EACL,WAAcd,EACd,gBALoBe,SAASC,eAAe,oBAAoBxE,MAMhE,eAAkB0E,IAIjBY,MAAK,SAAA5D,GACF,IAAIqE,EAActE,EAAYC,GAC9B,EAAKlD,MAAMwH,SAASD,EAAY,GAAIA,EAAY,GAAIA,EAAY,GAAIA,EAAY,OAEnFE,OAAM,SAAAC,GAAG,OAAIC,MAAMD,Q,mCAG5B,SAAsBV,GAAO,IAAD,OACxB7B,KAAKnF,MAAM6F,cAEX+B,YAAW,WACP,IAAIL,EAActE,EAAY+D,GAC9B,EAAKhH,MAAMwH,SAASD,EAAY,GAAIA,EAAY,GAAIA,EAAY,GAAIA,EAAY,MACjF,O,yBAGP,WACgBxB,SAASC,eAAe,kBAC9B6B,iBAAiB,SAAS,SAAUC,GAChB,KAAlBA,EAAMC,UACND,EAAME,iBACNjC,SAASC,eAAe,cAAciC,c,+BAKlD,WACI9C,KAAKQ,gB,oBAGT,WAAU,IACFuC,EADC,OAOL,OAJIA,EADA/C,KAAKN,MAAMe,QACL,wBAAQxF,GAAG,aAAa+H,QAAS,kBAAM,EAAKzC,sBAAsB,EAAKb,MAAMS,WAA7E,oBAEA,wBAAQlF,GAAG,aAAa+H,QAAShD,KAAKK,UAAtC,oBAGN,sBAAKvF,UAAU,mBAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,uBAAOA,UAAU,yBAAyBgF,QAAQ,iBAAlD,0BACA,uBAAOhF,UAAU,yBAAyBmI,KAAK,OAAOhI,GAAG,iBAAiBiI,YAAY,qBAAqBC,aAAa,gBAE5H,cAAC,EAAD,IACA,cAAC,EAAD,IACCJ,S,GAzES7C,a,kBEHpBkD,EAAa,IAAI9F,KAAK,oBAAoB+F,UAiHhD,SAASC,EAAaC,GAClB,IAAI1B,EAAO,GACP2B,EAAU,GACd,IAAK,IAAI9G,KAAT,YAAoB+G,MAAM,IAAIC,QAAS,CACnC,IAAIC,EAAOvF,OAAO1B,GAAK2B,SAAS,EAAG,KACnCmF,EAAQvE,KAAKmE,EAvHJ,KAuHkB1G,GAC3BmF,EAAK5C,KAAKsE,EAAeK,eAAeD,IAgB5C,MAdgB,CACZE,OAAQL,EACRM,SAAU,CACN,CACIC,gBAAiB,kBACjBC,YAAa,gBACbC,qBAAsB,kBACtBC,YAAa,EACbC,cAAe,EACfC,mBAAoB,EACpBvC,KAAMA,KAQtB,SAASwC,EAAwBV,GAC7B,IAAIW,EAAUX,GAAQ,GAAM,KAAO,KAGnC,OADa,KADbA,GAAe,MACGA,EAAO,IACnB,GAAN,OAAUA,GAAV,OAAiBW,GAINC,M,kDAhJX,WAAY1J,GAAQ,IAAD,sBAEf,IAAI2J,EAAYlB,GADhB,cAAMzI,IAC4BA,OAFnB,OAIf,EAAK6E,MAAQ,CACT+E,WAAY,EAAK5J,MAAM+I,eACvBY,UAAWA,GANA,E,0CAcnB,WACI,OACI,qBAAK1J,UAAU,sBAAf,SACI,cAAC,MAAD,CACI+G,KAAM7B,KAAKN,MAAM8E,UACjBE,QAAS,CACLC,YAAY,EACZC,qBAAqB,EACrBC,SAAU,CACNC,UAAW,CACPrJ,MAAO,SAAUsJ,GACbC,QAAQC,IAAIF,GACZ,IAAIzI,EAAQyI,EAAQ,GAAGzI,OAAS,GAGhC,GAFA0I,QAAQC,IAAI3I,GAERA,EAAO,CACP,IAAIqH,EAAO,IAAIrG,KAAKhB,GAAO4I,WACvBC,EAAWxB,EAAO,EAEtBA,EAAOU,EAAwBV,GAC/BwB,EAAWd,EAAwBc,GAEnC7I,EAAK,kBAAcqH,EAAd,gBAA0BwB,GAGnC,OAAO7I,GAEXA,MAAO,SAAUyI,GACbC,QAAQC,IAAIF,GACZ,IAAIzI,EAAQyI,EAAQ1I,OAAS,GAG7B,GAFA2I,QAAQC,IAAI3I,GAERA,EAAO,CACP,IAAI8I,EAAyB,MAAV9I,EAAiB,QAAU,SAC9CA,EAAK,UAAMA,EAAN,YAAe8I,EAAf,aAET,OAAO9I,KAInBb,MAAO,CACH4J,SAAS,EACTC,KAAM,eACNC,SAAU,GACVC,UAAW,mBAEfC,OAAQ,CACJJ,SAAS,EACTK,SAAU,SAEdC,OAAQ,CACJC,MAAO,CAAC,CACJC,QAAQ,EACR5C,KAAM,OACN6C,KAAM,CACFC,KAAM,QAEVC,UAAW,CACPX,SAAS,EACTY,iBAAiB,GAErBC,MAAO,CACHX,SAAU,GACVY,UAAU,EACVX,UAAW,mBAEfY,WAAY,CACRf,SAAS,EACTgB,YAAa,QACbb,UAAW,qBAGnBc,MAAO,CAAC,CACJN,UAAW,CACPX,SAAS,GAEba,MAAO,CACHX,SAAU,GACVY,UAAU,EACVI,SAAU,EACVf,UAAW,mBAEfY,WAAY,CACRf,SAAS,EACTgB,YAAa,kBACbb,UAAW,8B,uCAzF3C,SAAgCgB,EAAWC,GACvC,OAAQD,EAAU5C,iBAAmB6C,EAAUhC,WAAc,CAAED,UAAWlB,EAAakD,IAAe,S,GAZvFtG,aCCjBwG,EAASlH,EAAQ,KAAiBkH,OA0GzBC,E,kDAtGX,WAAY9L,GAAQ,IAAD,8BACf,cAAMA,IACD+L,oBAAsB,EAAKA,oBAAoBtG,KAAzB,gBAC3B,EAAKuG,iBAAmB,EAAKA,iBAAiBvG,KAAtB,gBACxB,EAAKwG,UAAY,EAAKA,UAAUxG,KAAf,gBACjB,EAAKZ,MAAQ,CACTqH,aAAc,EACd/I,WAAY,EACZ2C,QAAS,GACTqG,aAAc,GACd9I,kBAAmB,GACnB+I,aAAa,EACbC,cAAc,EACdxG,aAAa,GAbF,E,uDAiBnB,SAAoByG,GAEhB,IADA,IAAIC,EAAQ,EACJD,EAAM,KAASC,EAAQ,GAC3BD,GAAO,IACPC,GAAS,EAEb,OAAQA,GACJ,KAAK,EAED,OADAD,EAAME,KAAKC,MAAY,GAANH,GAAY,GACvB,GAAN,OAAUA,EAAV,KACJ,KAAK,EAED,OADAA,EAAME,KAAKC,MAAY,GAANH,GAAY,GACvB,GAAN,OAAUA,EAAV,KACJ,KAAK,EAED,OADAA,EAAME,KAAKC,MAAY,GAANH,GAAY,GACvB,GAAN,OAAUA,EAAV,KACJ,QACI,OAAOA,K,8BAInB,SAAiBnJ,EAAY+I,EAAcC,EAAc9I,GACrD8B,KAAKc,SAAS,CACV9C,WAAYA,EACZ+I,aAAcA,EACdC,aAAcA,EACd9I,kBAAmBA,EACnB+I,aAAa,EACbvG,aAAa,M,uBAIrB,WACIV,KAAKc,SAAS,CAAEJ,aAAa,M,oBAGjC,WACI,IAAI6G,EACAC,EACAC,EAqCJ,OApCIzH,KAAKN,MAAMgB,YACX+G,EACI,sBAAK3M,UAAU,UAAf,UACI,cAAC,EAAD,CAAauH,SAAUrC,KAAK6G,iBAAkBnG,YAAaV,KAAK8G,YAChE,cAACJ,EAAD,CAAQzD,KAAK,aAAayE,QAAM,OAGlC1H,KAAKN,MAAMuH,aAOjBM,EAAmB,cAAC,EAAD,CAAsBvL,UAAWgE,KAAKN,MAAMsH,eAC/DQ,EACI,sBAAK1M,UAAU,sBAAf,UACI,cAAC,EAAD,CAAkB0B,YAAa,CAC3B,CACI,MAASwD,KAAK4G,oBAAoB5G,KAAKN,MAAMqH,cAC7C,MAAS,iBAEb,CACI,MAAS/G,KAAK4G,oBAAoB5G,KAAKN,MAAM1B,YAC7C,MAAS,kBAEjB,cAAC,EAAD,CAAU4F,eAAgB5D,KAAKN,MAAMxB,uBAE7CuJ,EACI,sBAAK3M,UAAU,UAAf,UACI,cAAC,EAAD,CAAauH,SAAUrC,KAAK6G,iBAAkBnG,YAAaV,KAAK8G,YAC/DU,EACD,oBAAI1M,UAAU,4BAAd,6BACCyM,MAzBTE,EACI,sBAAK3M,UAAU,UAAf,UACI,cAAC,EAAD,CAAauH,SAAUrC,KAAK6G,iBAAkBnG,YAAaV,KAAK8G,YAChE,0EA0BR,sBAAKhM,UAAU,MAAf,UACI,cAAC,EAAD,IACC2M,S,GAjGCvH,aCNlByH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjH,SAASC,eAAe,W","file":"static/js/main.2470d2a2.chunk.js","sourcesContent":["import { React } from 'react';\r\n\r\nfunction Header(props) {\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header-container\">\r\n                <img className=\"logo\" alt=\"Starter Kit for Youtube Icon\"/>\r\n                <h2>Starter Kit For Youtube</h2>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { React } from 'react';\r\n\r\nfunction VideoResult(props) {\r\n\treturn (\r\n\t\t<li className=\"video-list-element\">\r\n\t\t\t<div className=\"video-result-container\">\r\n\t\t\t\t<div className=\"video-link-container\">\r\n\t\t\t\t\t<a id={props.videoId} className=\"video-link\" target=\"_blank\" href={`https://www.youtube.com/watch?v=${props.videoId}`} rel=\"noreferrer\">\r\n\t\t\t\t\t\t<img className=\"video-thumbnail\" src={props.thumbnailURL} alt={props.altText} />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"video-data-container\">\r\n\t\t\t\t\t<h3 className=\"video-title\">{props.title}</h3>\r\n\t\t\t\t\t<div className=\"video-channel-views\">\r\n\t\t\t\t\t\t<h4><a href={`https://www.youtube.com/channel/${props.channelId}`} target=\"_blank\" rel=\"noreferrer\">{props.channelTitle}</a><span> - </span>{parseInt(props.views).toLocaleString()} views</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default VideoResult;","import { React } from 'react';\r\nimport VideoResult from '../VideoResult/VideoResult.js';\r\n\r\nfunction VideoResultContainer(props) {\r\n    return (\r\n        <div className=\"results-container\" id=\"results-container\">\r\n            <ul className=\"results-list\">\r\n                {props.videoList.map(function (vidElement) {\r\n                    // vidElement -> [title, views, thumbnailURL, altText, datetimePublished, videoId, channelTitle, channelId]\r\n                    return <VideoResult key={vidElement[5]} title={vidElement[0]} views={vidElement[1]} thumbnailURL={vidElement[2]}\r\n                        altText={vidElement[3]} datetimePublished={vidElement[4]} videoId={vidElement[5]} channelTitle={vidElement[6]} channelId={vidElement[7]} />\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoResultContainer;","import { React } from 'react';\r\n\r\nfunction StatBox(props) {\r\n    // Has a value and a label\r\n    return (\r\n        <div className=\"stat-box\">\r\n            <h2 className=\"stat-value\">{props.value}</h2>\r\n            <h4 className=\"stat-label\">{props.label}</h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StatBox;","import { React } from 'react';\r\nimport StatBox from '../StatBox/StatBox.js';\r\n\r\nfunction StatBoxContainer(props) {\r\n    return (\r\n        <div className=\"stat-box-container\">\r\n            {props.statBoxList.map(function (statBox, idx) {\r\n                return <StatBox value={statBox.value} label={statBox.label} key={idx}/>\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StatBoxContainer;","import { React, useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction DateInput(props) {\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n\r\n    return (\r\n        <div className=\"search-parameter-container\">\r\n            <div className=\"search-parameter-label\">date range:</div>\r\n            <div className=\"search-parameter-input\">\r\n                <DatePicker\r\n                    id=\"published-after\"\r\n                    placeholderText=\"Select Start Date\"\r\n                    selected={startDate}\r\n                    onChange={date => setStartDate(date)}\r\n                    maxDate={(endDate) ? endDate : new Date()}\r\n                    showYearDropdown\r\n                    showMonthDropdown\r\n                    dropdownMode=\"select\"\r\n                    todayButton=\"Today\"\r\n                    autoComplete=\"off\"\r\n                    popperPlacement=\"bottom\"\r\n                />\r\n                <DatePicker\r\n                    id=\"published-before\"\r\n                    placeholderText=\"Select End Date\"\r\n                    selected={endDate}\r\n                    onChange={date => setEndDate(date)}\r\n                    maxDate={new Date()}\r\n                    minDate={startDate}\r\n                    showYearDropdown\r\n                    showMonthDropdown\r\n                    dropdownMode=\"select\"\r\n                    todayButton=\"Today\"\r\n                    autoComplete=\"off\"\r\n                    popperPlacement=\"bottom\"\r\n                />\r\n\r\n            </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DateInput;\r\n","function sortResults(results) {\r\n    var totalViews = 0;\r\n    var unsortedVidList = []\r\n    var allTimesPublished = {}\r\n\r\n    for (let i = 0; i < 24; i++) {\r\n        allTimesPublished[String(i).padStart(2, '0')] = 0;\r\n    }\r\n\r\n    for (let vid of results) {\r\n        const videoId = vid.id;\r\n        const title = vid.snippet.title;\r\n        \r\n        const channelTitle = vid.snippet.channelTitle;\r\n        const channelId = vid.snippet.channelId;\r\n\r\n        const views = vid.statistics.viewCount\r\n        totalViews += parseInt(views);\r\n\r\n        const thumbnailURL = vid.snippet.thumbnails.high.url;\r\n        const altText = `Thumbnail for video titled \"${title}\"`;\r\n\r\n        const datetimePublished = vid.snippet.publishedAt;\r\n        const timePublished = datetimePublished.match(/T(.*?):/);\r\n\r\n        allTimesPublished[timePublished[1]] = allTimesPublished[timePublished[1]] + 1;\r\n\r\n        let videoData = [title, views, thumbnailURL, altText, datetimePublished, videoId, channelTitle, channelId]\r\n        unsortedVidList.push(videoData);\r\n    }\r\n\r\n    let sortedVidList = unsortedVidList.sort(function (a, b) {\r\n        return b[1] - a[1];\r\n    });\r\n\r\n    let averageViews = totalViews / sortedVidList.length;\r\n    return [totalViews, averageViews, sortedVidList, allTimesPublished];\r\n}\r\n\r\nexport default sortResults;","import { React, Component } from 'react';\r\nconst contentRegions = require('../../data/contentRegions.json');\r\n\r\nclass RegionSelection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentRegion: 'United States',\r\n            regionList: contentRegions,\r\n            regionCode: 'US',\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='search-parameter-container'>\r\n                <label className=\"search-parameter-label\" htmlFor=\"region-select\">region:</label>\r\n                <select className=\"search-parameter-input\" name=\"regions\" id=\"region-select\">\r\n                    {this.state.regionList.map((region) => {\r\n                        return (this.state.currentRegion ===  region.name) ? <option value={region.id} key={region.id} selected>{region.name}</option>\r\n                                                                           : <option value={region.id} key={region.id}>{region.name}</option> \r\n                    })}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegionSelection;","import { React, Component } from 'react';\r\nimport DateInput from '../DateInput/DateInput.js';\r\nimport { youtubeSearch } from '../../js/youtubeapi.js';\r\nimport sortResults from '../../js/sortResults.js';\r\nimport RegionSelection from '../RegionSelection/RegionSelection.js';\r\nconst mockData = require('../../test/MockVideoResults.json');\r\n\r\nclass InputHeader extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.runSearch = this.runSearch.bind(this);\r\n        this.runSearchWithMockData = this.runSearchWithMockData.bind(this);\r\n        this.fireOnEnter = this.fireOnEnter.bind(this);;\r\n        this.state = {\r\n            testEnv: false, // If true, use mock data and don't run api\r\n            mockData: mockData\r\n        };\r\n    }\r\n\r\n    runSearch() {\r\n        this.props.isSearching();\r\n        const keyword = document.getElementById(\"search-keyword\").value;\r\n        this.setState({ keyword: keyword });\r\n        let regionCode = document.getElementById(\"region-select\").value;\r\n        const publishedAfter = document.getElementById(\"published-after\").value;\r\n        const publishedBefore = document.getElementById(\"published-before\").value;\r\n\r\n        let searchParams = {\r\n            'q': keyword,\r\n            'regionCode': regionCode,\r\n            'publishedBefore': publishedBefore,\r\n            'publishedAfter': publishedAfter\r\n        }\r\n\r\n        return youtubeSearch(searchParams)\r\n            .then(results => {\r\n                let viewResults = sortResults(results);\r\n                this.props.onSearch(viewResults[0], viewResults[1], viewResults[2], viewResults[3])\r\n            })\r\n            .catch(err => alert(err));\r\n    }\r\n\r\n    runSearchWithMockData(data) {\r\n        this.props.isSearching();\r\n        // timeout to test loading animation with mock data\r\n        setTimeout(() => {\r\n            let viewResults = sortResults(data);\r\n            this.props.onSearch(viewResults[0], viewResults[1], viewResults[2], viewResults[3]);\r\n        }, 2000);\r\n    }\r\n\r\n    fireOnEnter() {\r\n        let input = document.getElementById(\"search-keyword\");\r\n        input.addEventListener(\"keyup\", function (event) {\r\n            if (event.keyCode === 13) {\r\n                event.preventDefault();\r\n                document.getElementById(\"search-btn\").click();\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fireOnEnter();\r\n    }\r\n\r\n    render() {\r\n        let btn;\r\n        if (this.state.testEnv) {\r\n            btn = <button id=\"search-btn\" onClick={() => this.runSearchWithMockData(this.state.mockData)}>Search</button>\r\n        } else {\r\n            btn = <button id=\"search-btn\" onClick={this.runSearch}>Search</button>\r\n        }\r\n        return (\r\n            <div className=\"search-container\">\r\n                <div className=\"search-parameter-container\">\r\n                    <label className=\"search-parameter-label\" htmlFor=\"search-keyword\">search term:</label>\r\n                    <input className=\"search-parameter-input\" type=\"text\" id=\"search-keyword\" placeholder=\"Input Keyword Here\" defaultValue=\"nuzlocke\" />\r\n                </div>\r\n                <DateInput />\r\n                <RegionSelection  />\r\n                {btn}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputHeader;","import axios from 'axios';\r\n\r\nfunction youtubeSearch(searchParams) {\r\n    // For now if no keyword is given, send an alert to browser. Need to change in future.\r\n    /*\r\n    searchParams = {\r\n        <string> q,\r\n        <string> regionCode,\r\n        <datetime> publishedBefore,\r\n        <datetime> publishedAfter\r\n    }\r\n    */\r\n    let keyword = searchParams.q;\r\n    if (keyword === \"\") {\r\n        return Promise.reject(new Error(\"You must input a keyword to search for.\"))\r\n    }\r\n\r\n    let publishedBefore = (searchParams.publishedBefore !== '') ? new Date(searchParams.publishedBefore).toISOString() : new Date().toISOString();\r\n    let publishedAfter = (searchParams.publishedAfter !== '') ? new Date(searchParams.publishedAfter).toISOString() : '1970-01-01T00:00:00Z';\r\n\r\n    return axios.get(`https://youtube.googleapis.com/youtube/v3/search`, {\r\n        params: {\r\n            'part': 'snippet',\r\n            'maxResults': 50,\r\n            'key': process.env.REACT_APP_YOUTUBE_API_KEY,\r\n            'q': keyword,\r\n            'type': 'video',\r\n            'regionCode': searchParams.regionCode,\r\n            'publishedAfter': publishedAfter,\r\n            'publishedBefore': publishedBefore\r\n        }\r\n    })\r\n        .then(res => {\r\n            let videoList = res.data.items;\r\n            let vidIdList = [];\r\n            for (let i = 0; i < videoList.length; i++) {\r\n                let vidId = videoList[i].id.videoId;\r\n                vidIdList.push(vidId);\r\n            }\r\n            return axios.get(`https://youtube.googleapis.com/youtube/v3/videos`, {\r\n                params: {\r\n                    \"part\": \"snippet,statistics,contentDetails\",\r\n                    \"id\": vidIdList.join(),\r\n                    \"key\": process.env.REACT_APP_YOUTUBE_API_KEY,\r\n                }\r\n            })\r\n                .then((result) => {\r\n                    return result.data.items;\r\n                });\r\n        })\r\n}\r\n\r\nexport { youtubeSearch };","import { React, Component }  from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst ONE_HOUR = 3600000 // One hour represented as milliseconds\r\nconst START_TIME = new Date('December 24 1995').getTime(); // Argbitrary date. Just needed to get the hours.\r\n\r\nclass BarChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let graphData = setGraphData(this.props)\r\n\r\n        this.state = {\r\n            uploadData: this.props.uploadTimeData,\r\n            graphData: graphData\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        return (nextProps.uploadTimeData !== prevState.uploadData) ? { graphData: setGraphData(nextProps) } : null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bar-chart-container\">\r\n                <Bar\r\n                    data={this.state.graphData}\r\n                    options={{\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        tooltips: {\r\n                            callbacks: {\r\n                                title: function (context) {\r\n                                    console.log(context)\r\n                                    var label = context[0].label || '';\r\n                                    console.log(label);\r\n\r\n                                    if (label) {\r\n                                        let hour = new Date(label).getHours();\r\n                                        let nextHour = hour + 1;\r\n\r\n                                        hour = convertTimes12HourClock(hour);\r\n                                        nextHour = convertTimes12HourClock(nextHour);\r\n\r\n                                        label = `Between ${hour} and ${nextHour}`;\r\n                                    }\r\n                                    \r\n                                    return label;\r\n                                },\r\n                                label: function (context) {\r\n                                    console.log(context)\r\n                                    var label = context.value || '';\r\n                                    console.log(label);\r\n\r\n                                    if (label) {\r\n                                        let vid_grammar = (label === '1') ? 'video' : 'videos'\r\n                                        label = `${label} ${vid_grammar} uploaded`;\r\n                                    }\r\n                                    return label;\r\n                                }\r\n                            }\r\n                        },\r\n                        title: {\r\n                            display: true,\r\n                            text: 'Upload Times',\r\n                            fontSize: 20,\r\n                            fontColor: 'rgb(30, 30, 49)'\r\n                        },\r\n                        legend: {\r\n                            display: false,\r\n                            position: 'right',\r\n                        },\r\n                        scales: {\r\n                            xAxes: [{\r\n                                offset: true,\r\n                                type: 'time',\r\n                                time: {\r\n                                    unit: 'hour'\r\n                                },\r\n                                gridLines: {\r\n                                    display: true,\r\n                                    offsetGridLines: true,\r\n                                },\r\n                                ticks: {\r\n                                    fontSize: 10,\r\n                                    autoSkip: true,\r\n                                    fontColor: 'rgb(30, 30, 49)',\r\n                                },\r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: 'Hours',\r\n                                    fontColor: 'rgb(30, 30, 49)',\r\n                                }\r\n                            }],\r\n                            yAxes: [{\r\n                                gridLines: {\r\n                                    display: true\r\n                                },\r\n                                ticks: {\r\n                                    fontSize: 10,\r\n                                    autoSkip: true,\r\n                                    stepSize: 2,\r\n                                    fontColor: 'rgb(30, 30, 49)'\r\n                                },\r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: 'Videos Uploaded',\r\n                                    fontColor: 'rgb(30, 30, 49)'\r\n                                }\r\n                            }]\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction setGraphData(graphDataProps) {\r\n    let data = [];\r\n    let xLabels = [];\r\n    for (let idx in [...Array(24).keys()]) {\r\n        let hour = String(idx).padStart(2, '0');\r\n        xLabels.push(START_TIME + (idx * ONE_HOUR));\r\n        data.push(graphDataProps.uploadTimeData[hour]);\r\n    }\r\n    let graphData = {\r\n        labels: xLabels,\r\n        datasets: [\r\n            {\r\n                backgroundColor: 'rgba(196,0,0,1)',\r\n                borderColor: 'rgba(0,0,0,1)',\r\n                hoverBackgroundColor: 'rgba(138,0,0,1)',\r\n                borderWidth: 1,\r\n                barPercentage: 1.0,\r\n                categoryPercentage: 1.0,\r\n                data: data\r\n            }\r\n        ]\r\n    }\r\n    return graphData\r\n}\r\n\r\n\r\nfunction convertTimes12HourClock(hour) {\r\n    let suffix = (hour >= 12) ? 'PM' : 'AM';\r\n    hour = (hour % 12);\r\n    if (hour === 0) { hour = 12 };\r\n    return `${hour}${suffix}`;\r\n} \r\n\r\n\r\nexport default BarChart;","import './App.css';\r\nimport { React, Component } from 'react';\r\nimport Header from './components/Header/Header.js';\r\nimport VideoResultContainer from './components/VideoResultContainer/VideoResultContainer.js';\r\nimport StatBoxContainer from './components/StatBoxContainer/StatBoxContainer.js';\r\nimport InputHeader from './components/InputHeader/InputHeader.js';\r\nimport BarChart from './components/BarChart/BarChart.js';\r\nconst Loader = require('react-loaders').Loader;\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.simplifyLargeNumber = this.simplifyLargeNumber.bind(this);\r\n        this.getSearchResults = this.getSearchResults.bind(this);\r\n        this.setLoader = this.setLoader.bind(this);\r\n        this.state = {\r\n            averageViews: 0,\r\n            totalViews: 0,\r\n            keyword: '',\r\n            videoResults: [],\r\n            allTimesPublished: {},\r\n            hasSearched: false,\r\n            useDateRange: false,\r\n            isSearching: false\r\n        }\r\n    }\r\n\r\n    simplifyLargeNumber(num) {\r\n        let count = 0;\r\n        while ((num > 999) && (count < 3)) {\r\n            num /= 1000;\r\n            count += 1\r\n        }\r\n        switch (count) {\r\n            case 1:\r\n                num = Math.round(num * 10) / 10;\r\n                return `${num}K`\r\n            case 2:\r\n                num = Math.round(num * 10) / 10;\r\n                return `${num}M`\r\n            case 3:\r\n                num = Math.round(num * 10) / 10;\r\n                return `${num}B`\r\n            default:\r\n                return num\r\n        }\r\n    }\r\n\r\n    getSearchResults(totalViews, averageViews, videoResults, allTimesPublished) {\r\n        this.setState({\r\n            totalViews: totalViews,\r\n            averageViews: averageViews,\r\n            videoResults: videoResults,\r\n            allTimesPublished: allTimesPublished,\r\n            hasSearched: true,\r\n            isSearching: false\r\n        });\r\n    }\r\n\r\n    setLoader() {\r\n        this.setState({ isSearching: true })\r\n    }\r\n\r\n    render() {\r\n        let resultsContainer;\r\n        let statContainer;\r\n        let content;\r\n        if (this.state.isSearching) {\r\n            content =\r\n                <div className=\"content\">\r\n                    <InputHeader onSearch={this.getSearchResults} isSearching={this.setLoader} />\r\n                    <Loader type=\"line-scale\" active />\r\n                </div>\r\n        }\r\n        else if (!this.state.hasSearched) {\r\n            content =\r\n                <div className=\"content\">\r\n                    <InputHeader onSearch={this.getSearchResults} isSearching={this.setLoader} />\r\n                    <p>Enter a search term to display results</p>\r\n                </div>\r\n        } else {\r\n            resultsContainer = <VideoResultContainer videoList={this.state.videoResults} />\r\n            statContainer =\r\n                <div className=\"all-stats-container\">\r\n                    <StatBoxContainer statBoxList={[\r\n                        {\r\n                            \"value\": this.simplifyLargeNumber(this.state.averageViews),\r\n                            \"label\": \"Average Views\"\r\n                        },\r\n                        {\r\n                            \"value\": this.simplifyLargeNumber(this.state.totalViews),\r\n                            \"label\": \"Total Views\"\r\n                        }]} />\r\n                    <BarChart uploadTimeData={this.state.allTimesPublished} />\r\n                </div>\r\n            content = \r\n                <div className=\"content\">\r\n                    <InputHeader onSearch={this.getSearchResults} isSearching={this.setLoader} />\r\n                    {statContainer}\r\n                    <h2 className=\"video-results-list-header\">Popular Uploads</h2>\r\n                    {resultsContainer}\r\n                </div>\r\n        }\r\n        return (\r\n            <div className=\"App\">\r\n                <Header />\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}